# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  config.vm.define "web01", primary: true do |web01|
    web01.vm.box = "ubuntu/trusty32"
    web01.vm.hostname = 'web01'

    web01.vm.network :private_network, ip: "192.168.56.101"
    web01.vm.network :forwarded_port, guest: 22, host: 10122, id: "ssh"

    web01.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--memory", 512]
      v.customize ["modifyvm", :id, "--name", "web01"]
    end
  end

  config.vm.define "web02", autostart: false do |web02|
    web02.vm.box = "ubuntu/trusty32"
    web02.vm.hostname = 'web02'

    web02.vm.network :private_network, ip: "192.168.56.103"
    web02.vm.network :forwarded_port, guest: 22, host: 10122, id: "ssh"

    web02.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--memory", 512]
      v.customize ["modifyvm", :id, "--name", "web02"]
    end
  end

  config.vm.define "db" do |db|
    db.vm.box = "ubuntu/trusty32"
    db.vm.hostname = 'db'

    db.vm.network :private_network, ip: "192.168.56.102"
    db.vm.network :forwarded_port, guest: 22, host: 10222, id: "ssh"

    db.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--memory", 512]
      v.customize ["modifyvm", :id, "--name", "db"]
    end
  end

  config.vm.define "manager" do |manager|
    manager.vm.box = "ubuntu/trusty32"
    manager.vm.hostname = 'manager'

    manager.vm.network :private_network, ip: "192.168.56.102"
    manager.vm.network :forwarded_port, guest: 22, host: 10322, id: "ssh"

    manager.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--memory", 512]
      v.customize ["modifyvm", :id, "--name", "manager"]
    end

    # Enable provisioning with a shell script. Additional provisioners such as
    # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
    # documentation for more information about their specific syntax and use.
    config.vm.provision "shell", path: 'libraries.sh' 
    #config.vm.provision "shell", path: 'docker.sh' 
    #config.vm.provision "shell", path: 'kops.sh'    
  end

end
